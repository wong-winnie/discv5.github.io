<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>区块链 on Hehaitao.vip</title>
    <link>/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/</link>
    <description>Recent content in 区块链 on Hehaitao.vip</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 15 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>智能合约</title>
      <link>/post/%E5%8C%BA%E5%9D%97%E9%93%BE/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/</link>
      <pubDate>Thu, 15 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/%E5%8C%BA%E5%9D%97%E9%93%BE/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/</guid>
      <description>MOL 代币合约地址：0x32b7a3018e4b832dea848786348164667ec030f3
pragma solidity ^0.4.16; interface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; } contract Bosschain { // Public variables of the token string public name; string public symbol; uint8 public decimals = 18; // 18 decimals is the strongly suggested default, avoid changing it uint256 public totalSupply; // This creates an array with all balances mapping (address =&amp;gt; uint256) public balanceOf; mapping (address =&amp;gt; mapping (address =&amp;gt; uint256)) public allowance; // This generates a public event on the blockchain that will notify clients event Transfer(address indexed from, address indexed to, uint256 value); // This notifies clients about the amount burnt event Burn(address indexed from, uint256 value); /** * Constrctor function * * Initializes contract with initial supply tokens to the creator of the contract */ function Bosschain( uint256 initialSupply, string tokenName, string tokenSymbol ) public { totalSupply = initialSupply * 10 ** uint256(decimals); // Update total supply with the decimal amount balanceOf[msg.</description>
    </item>
    
    <item>
      <title>USDT教程</title>
      <link>/post/%E5%8C%BA%E5%9D%97%E9%93%BE/usdt%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sun, 11 Aug 2019 09:03:39 +0000</pubDate>
      
      <guid>/post/%E5%8C%BA%E5%9D%97%E9%93%BE/usdt%E6%95%99%E7%A8%8B/</guid>
      <description>&lt;p&gt;Omni Core是Bitcoin Core的一个分支，其Omni协议功能支持作为顶层的新功能层添加。因此，与API的交互以与Bitcoin Core相同的方式（JSON-RPC）完成，只需使用额外的RPC即可使用Omni协议功能。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>以太坊教程</title>
      <link>/post/%E5%8C%BA%E5%9D%97%E9%93%BE/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sat, 10 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/%E5%8C%BA%E5%9D%97%E9%93%BE/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E6%95%99%E7%A8%8B/</guid>
      <description>&lt;p&gt;以太坊教程&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang语言实战</title>
      <link>/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/golang%E8%AF%AD%E8%A8%80%E5%AE%9E%E6%88%98/</link>
      <pubDate>Wed, 17 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/golang%E8%AF%AD%E8%A8%80%E5%AE%9E%E6%88%98/</guid>
      <description>学习导航 Golang 时间和日期笔记 Golang float64，in64相互转换精度控制  Golang 浮点数操作  //将float64转成精确的int64 func Wrap(num float64, retain int) int64 { return int64(num * math.Pow10(retain)) } //将int64恢复成正常的float64 func Unwrap(num int64, retain int) float64 { return float64(num) / math.Pow10(retain) } //精准float64 func WrapToFloat64(num float64, retain int) float64 { return num * math.Pow10(retain) } //精准int64 func UnwrapToInt64(num int64, retain int) int64 { return int64(Unwrap(num, retain)) }  Golang 时间操作  Golang time 时间戳、日期字符串相互转化  package main import &amp;quot;time&amp;quot; import &amp;quot;fmt&amp;quot; //import &amp;quot;strconv&amp;quot; func main() { fmt.</description>
    </item>
    
    <item>
      <title>交易所充币.md</title>
      <link>/post/%E5%8C%BA%E5%9D%97%E9%93%BE/%E4%BA%A4%E6%98%93%E6%89%80%E9%92%B1%E5%8C%85%E5%85%85%E5%B8%81/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/%E5%8C%BA%E5%9D%97%E9%93%BE/%E4%BA%A4%E6%98%93%E6%89%80%E9%92%B1%E5%8C%85%E5%85%85%E5%B8%81/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ETH搭建私有链</title>
      <link>/post/%E5%8C%BA%E5%9D%97%E9%93%BE/eth%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E9%93%BE/</link>
      <pubDate>Mon, 06 May 2019 10:49:32 +0000</pubDate>
      
      <guid>/post/%E5%8C%BA%E5%9D%97%E9%93%BE/eth%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E9%93%BE/</guid>
      <description>&lt;p&gt;以太坊私有链搭建，可以给想接触和玩的新手提供一个入门体验，你们真正感受下区块链的魅力。还有就是在测试环境中也可以的，以太坊主网数据同步始终都是一个硬伤，硬盘消耗太大而且国内同步一般很难完全实现的了，下面的文章就是为了更大家提供一定的方便，详细的讲解里面的步骤。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Parity使用总结</title>
      <link>/post/%E5%8C%BA%E5%9D%97%E9%93%BE/parity%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 06 May 2019 10:49:32 +0000</pubDate>
      
      <guid>/post/%E5%8C%BA%E5%9D%97%E9%93%BE/parity%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;从最先进的以太坊客户Parity Ethereum到下一代互操作区块链网络Polkadot。奇偶校验构建了Web 3.0的最前沿。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>交易所钱包归集</title>
      <link>/post/%E5%8C%BA%E5%9D%97%E9%93%BE/%E4%BA%A4%E6%98%93%E6%89%80%E9%92%B1%E5%8C%85%E5%BD%92%E9%9B%86/</link>
      <pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/%E5%8C%BA%E5%9D%97%E9%93%BE/%E4%BA%A4%E6%98%93%E6%89%80%E9%92%B1%E5%8C%85%E5%BD%92%E9%9B%86/</guid>
      <description></description>
    </item>
    
    <item>
      <title>比特币教程</title>
      <link>/post/%E5%8C%BA%E5%9D%97%E9%93%BE/%E6%AF%94%E7%89%B9%E5%B8%81%E6%95%99%E7%A8%8B/</link>
      <pubDate>Wed, 17 Apr 2019 20:03:39 +0000</pubDate>
      
      <guid>/post/%E5%8C%BA%E5%9D%97%E9%93%BE/%E6%AF%94%E7%89%B9%E5%B8%81%E6%95%99%E7%A8%8B/</guid>
      <description>&lt;p&gt;比特币教程&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>